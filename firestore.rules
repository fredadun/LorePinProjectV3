rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - users can read all profiles but only edit their own
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }
    
    // Challenges - anyone can read, only sponsors can create, owners can update/delete
    match /challenges/{challengeId} {
      allow read: if true;
      allow create: if request.auth != null && 
                     (request.auth.token.isSponsor == true || 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isSponsor == true);
      allow update, delete: if request.auth != null && 
                             (resource.data.creatorId == request.auth.uid || 
                              resource.data.sponsorId == request.auth.uid);
    }
    
    // Submissions - anyone can read, authenticated users can create, owners can update/delete
    match /submissions/{submissionId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // LoreCoin transactions - users can read their own, system can write
    match /loreCoinTransactions/{transactionId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Sponsors - anyone can read public data, only the sponsor can update their profile
    match /sponsors/{sponsorId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == sponsorId;
    }
    
    // Sponsor verification requests - only the requester can read/write their own
    match /sponsorVerificationRequests/{requestId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}