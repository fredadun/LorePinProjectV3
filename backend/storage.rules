rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Default rule - deny all
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // User profile images
    match /users/{userId}/profile/{fileName} {
      allow read;
      allow write: if request.auth != null && 
                    request.auth.uid == userId && 
                    request.resource.contentType.matches('image/.*') && 
                    request.resource.size < 5 * 1024 * 1024; // 5MB limit
    }
    
    // Challenge submissions
    match /submissions/{userId}/{fileName} {
      allow read;
      allow create: if request.auth != null && 
                     request.auth.uid == userId && 
                     (request.resource.contentType.matches('image/.*') || 
                      request.resource.contentType.matches('video/.*')) && 
                     request.resource.size < 50 * 1024 * 1024; // 50MB limit
      allow update, delete: if request.auth != null && 
                             (request.auth.uid == userId || 
                              request.auth.token.isAdmin == true);
    }
    
    // Challenge images
    match /challenges/{challengeId}/{fileName} {
      allow read;
      allow write: if request.auth != null && 
                    (request.auth.token.isSponsor == true || 
                     request.auth.token.isAdmin == true) && 
                    request.resource.contentType.matches('image/.*') && 
                    request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
  }
} 